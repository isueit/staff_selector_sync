<?php

use \Drupal\Core\Entity\EntityInterface;
use \Drupal\Core\Entity\EntityStorageInterface;

/**
 * @file staff_profile_sync.module
 * Contains staff_profile_sync.module
 */

/**
 * Implements hook_cron()
 */
 function staff_profile_sync_cron() {
   //Run once per day, currently best option unless installing ultimate cron module
   if (\Drupal::config('staff_profile_sync.settings')->get('staff_profile_sync_last') < date('Ymd')) {
     staff_profile_sync_updater();
   }
 }

/**
 * Checks server and current staff directory for changes
 */
function staff_profile_sync_updater() {
  \Drupal::logger('staff_profile_sync')->info('Starting staff directory update');
  $netid_domain = "iastate.edu";
  $local_profiles = \Drupal::entityTypeManager()->getStorage('staff_profile_profile')->loadByProperties(['field_from_staff_directory' => true]);
  foreach ($local_profiles as $entity) {
    if ($entity->isPublished()) {
      $entity->setUnpublished();
      $entity->save();
    }
  }
  //Add untracked profiles after unpublishing tracked
  $local_profiles = array_merge($local_profiles, \Drupal::entityTypeManager()->getStorage('staff_profile_profile')->loadByProperties(['field_from_staff_directory' => false]));

  //Log reporting
  \Drupal::logger('staff_profile_sync')->info(count($local_profiles) . " Local staff_profile entities found. \r\n ");
  $updated = 0;//Does not mean they were changed, only found
  $created = 0;

  // NOTE: Replace with creds
  $myServer = "example.com";
  $myUser = "root";
  $myPass = "password";
  $myDB = "database";

  $dbhandle = sqlsrv_connect($myServer, array("Database" => $myDB, "UID" => $myUser, "PWD" => $myPass))
    or die("Couldn't connect to SQL Server on $myServer");
  $results = sqlsrv_query($dbhandle, "dbo.Staff_GetFullDirectory");
  if ($results === false) {
    die( print_r(sqlsrv_errors(), true));
  }

  while ($profile = sqlsrv_fetch_object($results)) {
    $found = false;
    foreach ($local_profiles as $entity) {
      $db_netid = explode("@",$profile->email)[0];

      $properties = ['name' => $profile->CountyName];
      $taxonomy = \Drupal::entityManager()->getStorage('taxonomy_term')->loadByProperties($properties);
      $base_county = reset($taxonomy);
      $properties = ['name' => $profile->CountiesServed];
      $taxonomy = \Drupal::entityManager()->getStorage('taxonomy_term')->loadByProperties($properties);
      foreach ($taxonomy as $c) {
        $counties_served[] = $c->id();
      }

      //Allow match from netid or start of email
      if (($db_netid == $entity->label() && $entity->label() != "") || ($db_netid == explode("@", $entity->field_email->value)[0] && explode("@", $entity->field_email->value)[1] == $netid_domain)) {
        $entity->field_program_area_s_->value = $profile->ProgramAreaName;
        $entity->field_first_name->value = $profile->FirstName;
        $entity->field_last_name->value = $profile->LastName;
        $entity->field_email->value = $profile->email;
        $entity->field_address_1->value = $profile->Address1;
        $entity->field_address_2->value = $profile->Address2;
        $entity->field_city->value = $profile->City;
        $entity->field_state->value = $profile->State;
        $entity->field_zip->value = $profile->Zip;
        $entity->field_phone->value = $profile->Phone;
        $entity->field_fax->value = $profile->Fax;
        $entity->field_base_region->value = $profile->ExtensionArea;
        $entity->field_location->value = $profile->Location;
        $entity->field_department_id->value = $profile->DepartmentName;
        //$entity->field_position_title->value = $profile->UniversityTitle; //Users may want to change
        // $entity->field_base_county->value = $base_county->id();
        // $entity->field_counties_served->value = $counties_served;

        $entity->field_from_staff_directory->value = true;
        $entity->setPublished();
        $entity->save();
        $found = true;
        $updated++;
      }
    }
    if (!$found) {
      $newEntity = \Drupal\staff_profile\Entity\StaffProfile::create([
        'field_first_name' => $profile->FirstName,
        'field_last_name' => $profile->LastName,
        'field_email' => $profile->email,
        'field_address_1' => $profile->Address1,
        'field_address_2' => $profile->Address2,
        'field_city' => $profile->City,
        'field_state' => $profile->State,
        'field_zip' => $profile->Zip,
        'field_phone' => $profile->Phone,
        'field_fax' => $profile->Fax,
        'field_base_region' => $profile->ExtensionArea,
        'field_location' => $profile->Location,
        'field_department_id' => $profile->DepartmentName,
        'field_position_title' => $profile->UniversityTitle,
        'field_program_area_s_' => $profile->ProgramAreaName,
        // 'field_base_county' => $base_county->id(),
        // 'field_counties_served' => $counties_served,
        'field_from_staff_directory' => true,
      ]);
      $newEntity->setPublished();
      $newEntity->save();
      $created++;
    }
  }
  \Drupal::configFactory()->getEditable('staff_profile.settings')
    ->set('staff_profile_lastCron', date('Ymd'))
    ->save();
  \Drupal::logger('staff_profile_sync')->info("Staff Profile Sync Succeded. \r\n" . $updated . " Profiles updated and " . $created . " Profiles created.");
}

//Trigger on creation of new user to give them ownership
function staff_profile_user_insert(Drupal\Core\Entity\EntityInterface $user) {
  $net_id = $user->getUsername();
  $local_profile = \Drupal::entityTypeManager()->getStorage('staff_profile_profile')->loadByProperties(['netid' => $net_id]);
  if ($local_profile[0]) {
    $local_profile[0]->setOwnerId($user->id())
      ->setOwner($user)
      ->setOwnerId($user->id())
      ->user_id = $user->id()
    ->save();
  } else {
    $newEntity = \Drupal\staff_profile\Entity\StaffProfile::create([
      'netid' => $net_id,
      'field_email' => $user->getEmail(),
      'user_id' => $user->id(),
    ]);
    $newEntity->setUnpublished()
    ->setOwnerId($user->id())
    ->setOwner($user)
    ->save();
  }
}
