<?php

use \Drupal\Core\Entity\EntityInterface;
use \Drupal\Core\Entity\EntityStorageInterface;
use \Drupal\node\Entity\Node;

/**
 * @file staff_profile_sync.module
 * Contains staff_profile_sync.module
 */

/**
 * Implements hook_cron()
 */
 function staff_profile_sync_cron() {
   //Run once per day, currently best option unless installing ultimate cron module
   if (\Drupal::config('staff_profile_sync.settings')->get('staff_profile_sync_last') < date('Ymd')) {
     staff_profile_sync_updater();
   }
 }

/**
 * Checks server and current staff directory for changes
 */
function staff_profile_sync_updater() {
  \Drupal::logger('staff_profile_sync')->info('Starting staff directory update');
  $netid_domain = "iastate.edu";
  \Drupal\Core\Database\Database::addConnectionInfo('staff_db', 'default', array( //TODO update connetion with correct information
    'database' => 'staff_info',
    'username' => 'root',
    'password' => 'password',
    'prefix' => '',
    'host' => php_sapi_name() == 'cli' || php_sapi_name() == 'apache2handler' ? 'localhost' : '127.0.0.1',//command ('cli') and GUI ('apache2handler') use localhost
    'port' => '3306',
    'namespace' => 'Drupal\\Core\\Database\\Driver\\mysql',
    'driver' => 'mysql',
  ));
  \Drupal\Core\Database\Database::setActiveConnection('staff_db');
  $db = \Drupal\Core\Database\Database::getConnection('default','staff_db');
  $data = $db->query('SELECT email, phone, fname, lname FROM staff_info');//TODO Need list of available data on database
  $db_profiles = $data->fetchAll();
  \Drupal\Core\Database\Database::setActiveConnection('default');

  $nids = \Drupal::entityQuery('node')->condition('type','staff_profile')->condition('field_from_database', true)->execute();
  $local_profiles = \Drupal\node\Entity\Node::loadMultiple($nids);

  //Only continue if connection succeded and got data from server
  if (!empty(array_filter($db_profiles))) {
    foreach ($local_profiles as $node) {
      if ($node->isPublished()) {
        $node->setUnpublished();
        $node->save();
      }
    }
    //Add untracked profiles after unpublishing tracked
    $nids = \Drupal::entityQuery('node')->condition('type','staff_profile')->execute();
    $local_profiles = \Drupal\node\Entity\Node::loadMultiple($nids);

    //Log reporting
    \Drupal::logger('staff_profile_sync')->info(count($local_profiles) . " Local staff_profile entities found. \r\n " . count($db_profiles) . " Database entries found.");
    $updated = 0;//Does not mean they were changed, only found
    $created = 0;
    //Look through records and update or create
    foreach ($db_profiles as $profile) {
      $found = false;
      foreach ($local_profiles as $entity) {
        $db_netid = explode("@",$profile->email)[0];
        //Allow match from netid or start of email
        if (($db_netid == explode("@", $entity->field_email->value)[0] && explode("@", $entity->field_email->value)[1] == $netid_domain)){
          $entity->field_from_staff_directory->value = true;
          $entity->field_email->value = $profile->email;//TODO add all fields
          $entity->field_phone->value = $profile->phone;
          $entity->field_first_name->value = $profile->fname;
          $entity->field_last_name->value = $profile->lname;
          $entity->field_from_staff_directory->value = true;
          $entity->setPublished();
          $entity->save();
          $found = true;
          $updated++;
        }
      }
      if (!$found) {
        $node = Node::create([
          'type' => 'staff_profile',
          'title' => $profile->fname . $profile->lname,
          'field_email' => $profile->email,
          'field_phone' => $profile->phone,
          'field_first_name' => $profile->fname,
          'field_last_name' => $profile->lname,
          'field_from_staff_directory' => true,
        ]);
        $node->setPublished();
        $node->save();
        $created++;
      }
    }
    \Drupal::configFactory()->getEditable('staff_profile.settings')
      ->set('staff_profile_lastCron', date('Ymd'))
      ->save();
    \Drupal::logger('staff_profile_sync')->info("Staff Profile Sync Succeded. \r\n" . $updated . " Profile(s) updated and " . $created . " Profile(s) created.");
  } else {
    \Drupal::logger('staff_profile_sync')->error('Failed to Connect to Remote Database');
  }
}

//Trigger on creation of new user to give them ownership
function staff_profile_user_insert(Drupal\Core\Entity\EntityInterface $user) {
  $net_id = $user->getUsername();
  $nid = \Drupal::entityQuery('node')->condition('type','staff_profile')->condition('field_email', $user->getEmail())->execute();
  $local_profiles = \Drupal\node\Entity\Node::load($nid);
  if ($local_profile[0]) {
    $local_profile[0]->setOwnerId($user->id())
      ->setOwner($user)
    ->save();
  } else {
    $node = Node::create([
      'type' => 'staff_profile',
      'field_email' => $user->getEmail(),
      'field_phone' => $profile->phone,
    ]);
    $node->setUnpublished()
    ->setOwner($user)
    ->save();
  }
}
